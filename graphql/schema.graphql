"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

input LoginInput {
    login: String @rules(apply: ["required", "max:255"])
    password: String @rules(apply: ["required", "max:255"])
}

input SignupInput {
    first_name: String @rules(apply: ["required", "max:255"])
    last_name: String @rules(apply: ["required", "max:255"])
    email: String @rules(apply: ["required", "email", "max:255"])
    username: String @rules(apply: ["required", "max:255"])
    password: String @rules(apply: ["required", "confirmed", "min:8", "max:255"])
    password_confirmation: String @rules(apply: ["required", "min:8", "max:255"])
}

type Auth {
    token: Token!
    user: User!
}

type Token {
    api_token: String!
    expires_in: Int!
}

type User {
    id: ID!
    first_name: String!
    last_name: String!
    email: String!
    username: String!
    email_verified: Boolean!
    created_at: DateTime!
    updated_at: DateTime!
}

type Query {
    user(id: ID @eq): User
        @middleware(checks: ["auth:api"]) @find
}

type Mutation {
    signup(input: SignupInput! @spread): Auth
        @field(resolver: "App\\GraphQL\\Mutations\\AuthMutator@signup")
    login(input: LoginInput! @spread): Auth
        @field(resolver: "App\\GraphQL\\Mutations\\AuthMutator@login")
    refresh: Auth @middleware(checks: ["auth:api"])
        @field(resolver: "App\\GraphQL\\Mutations\\AuthMutator@refresh")
    verify(token: String!): Auth @middleware(checks: ["auth:api"])
        @field(resolver: "App\\GraphQL\\Mutations\\AuthMutator@verify")
    verify_resend: Boolean @middleware(checks: ["auth:api"])
        @field(resolver: "App\\GraphQL\\Mutations\\AuthMutator@verifyResend")
}